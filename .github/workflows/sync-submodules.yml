name: Sync Submodules

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      sync_mode:
        description: 'Sync mode'
        required: true
        default: 'update'
        type: choice
        options:
          - update
          - reset
      specific_submodule:
        description: 'Specific submodule path (leave empty for all)'
        required: false
        type: string

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Update all submodules
        if: github.event.inputs.specific_submodule == ''
        run: |
          echo "📦 Updating all submodules..."
          git submodule update --init --recursive
          git submodule foreach 'git fetch origin && git checkout $(git rev-parse --abbrev-ref HEAD) && git pull origin $(git rev-parse --abbrev-ref HEAD) || echo "Failed to update $name"'
          
          # Check for changes
          if [[ `git status --porcelain` ]]; then
            echo "✅ Changes detected in submodules"
            git add .
            git commit -m "🔄 Auto-sync: Update all submodules to latest versions
            
            Updated on: $(date '+%Y-%m-%d %H:%M:%S UTC')
            Workflow run: ${{ github.run_number }}
            
            This is an automated update of all git submodules to their latest versions."
          else
            echo "ℹ️ No changes in submodules"
          fi

      - name: Update specific submodule
        if: github.event.inputs.specific_submodule != ''
        run: |
          echo "📦 Updating specific submodule: ${{ github.event.inputs.specific_submodule }}"
          cd ${{ github.event.inputs.specific_submodule }}
          git fetch origin
          git checkout $(git rev-parse --abbrev-ref HEAD)
          git pull origin $(git rev-parse --abbrev-ref HEAD)
          cd $GITHUB_WORKSPACE
          
          # Check for changes
          if [[ `git status --porcelain` ]]; then
            echo "✅ Changes detected in ${{ github.event.inputs.specific_submodule }}"
            git add .
            git commit -m "🔄 Manual sync: Update ${{ github.event.inputs.specific_submodule }}
            
            Updated on: $(date '+%Y-%m-%d %H:%M:%S UTC')
            Triggered by: @${{ github.actor }}"
          else
            echo "ℹ️ No changes in ${{ github.event.inputs.specific_submodule }}"
          fi

      - name: Create Pull Request
        if: github.event_name == 'schedule'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "🔄 Weekly submodule sync"
          title: "🔄 Weekly Submodule Update - $(date '+%Y-%m-%d')"
          body: |
            ## 🔄 Automated Submodule Sync
            
            This PR contains the weekly update of all git submodules to their latest versions.
            
            ### 📊 Update Summary
            - **Date**: $(date '+%Y-%m-%d %H:%M:%S UTC')
            - **Type**: Scheduled weekly sync
            - **Submodules**: All repositories updated to latest commits
            
            ### ⚠️ Please Review
            - Check for any breaking changes in updated repositories
            - Verify compatibility with Hailo-8L and Raspberry Pi
            - Test critical functionality if major updates detected
            
            ---
            *This is an automated PR created by GitHub Actions*
          branch: submodule-updates-${{ github.run_number }}
          delete-branch: true
          labels: |
            dependencies
            automated
            submodules

      - name: Push changes directly
        if: github.event_name == 'workflow_dispatch'
        run: |
          git push origin main || echo "No changes to push"

      - name: Generate sync report
        if: always()
        run: |
          echo "## 📊 Submodule Sync Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Submodule Status:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          git submodule status >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Recent Changes:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          git log --oneline -5 >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY